type User implements Node {
  id: ID!
  name: String!
}

input UserInput {
  name: String!
  clientMutationId: String
}

input UpdateUserInput {
  id: ID!
  name: String!
  clientMutationId: String
}

type UserPayload {
  user: User
  clientMutationId: String
}

type CreateUserPayload {
  user: User
  viewer: Viewer
  clientMutationId: String
}

# Registration
input RegisterUserInput {
  name: String!
  email: String!
  username: String!
  password: String!
  clientMutationId: String
}

extend type Query {
  user(id: ID!): User
  users: [User]!
}

extend type Mutation {
  # Tests
  createUser(input: UserInput): CreateUserPayload
  updateUser(input: UpdateUserInput): UserPayload

  # Account management
  registerUser(input: RegisterUserInput): UserPayload
}
